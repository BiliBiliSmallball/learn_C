C51 COMPILER V9.54   24C02                                                                 06/29/2022 17:50:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN .\Objects\24C02.obj
COMPILER INVOKED BY: D:\Software\C51\BIN\C51.EXE ..\HARDWARE\24C02\24C02.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HARD
                    -WARE;..\SYSTEM;..\USER;..\HARDWARE\key;..\HARDWARE\24C02;..\HARDWARE\LCD12864) DEBUG OBJECTEXTEND PRINT(.\Listings\24C02
                    -.lst) OBJECT(.\Objects\24C02.obj)

line level    source

   1          #include "24c02.h"
   2          #include "iic.h"
   3          #include "system.h"
   4          
   5          #define address_base 0x00                                                                                               //Ó²¼þ¾ö¶¨Æ÷¼þ´ÓµØÖ·Îª0£¬·¶Î§£¨0~7£©
   6          
   7          void IC_24Cxx_Init()
   8          {
   9   1              IIC_Hardware_Init(); 
  10   1      }
  11          /**********************************************************
  12          *¹¦    ÄÜ£ºÔÚAT24CXXÖ¸¶¨µØÖ·¶Á³öÒ»¸öÊý¾Ý
  13          *²Î    Êý£ºReadAddr/¿ªÊ¼¶ÁÊýµÄµØÖ·  
  14          *·µ »Ø Öµ£º¶Áµ½µÄÊý¾Ý
  15          **********************************************************/
  16          uint8_t IC_24Cxx_Read_Byte(uint16_t ReadAddr)
  17          {
  18   1              uint8_t temp = 0;
  19   1              IIC_Start();
  20   1              IIC_Send_Byte(0XA0+(address_base<<1));                          
  21   1              IIC_Wait_Ack();                                                                                                                         //µÈ´ýÓ¦´ðÐÅºÅ
  22   1              IIC_Send_Byte(ReadAddr);
  23   1              IIC_Wait_Ack();
  24   1              IIC_Start();
  25   1              IIC_Send_Byte(0xA1+(address_base<<1));                          //½øÈë½ÓÊÕÄ£Ê½
  26   1              IIC_Wait_Ack();                                                                                                                         //µÈ´ýÓ¦´ð
  27   1              temp = IIC_Read_Byte(0);
  28   1              IIC_Stop();
  29   1              return temp;
  30   1      }
  31          
  32          /**********************************************************
  33          *¹¦    ÄÜ£ºÔÚAT24CXXÖ¸¶¨µØÖ·Ð´ÈëÒ»¸öÊý¾Ý
  34          *²Î    Êý£ºWriteAddr/Ð´ÈëÊý¾ÝµÄÄ¿µÄµØÖ·  £»data:ÒªÐ´ÈëµÄÊý¾Ý
  35          *·µ »Ø Öµ£ºÎÞ
  36          **********************************************************/
  37          void IC_24Cxx_Write_Byte(uint16_t WriteAddr,uint8_t wdata)
  38          {
  39   1              IIC_Start();
  40   1              IIC_Send_Byte(0XA0+(address_base<<1));                          //·¢ËÍÆ÷¼þµØÖ·
  41   1              IIC_Wait_Ack();                                                                                                                         //µÈ´ýÓ¦´ð
  42   1              IIC_Send_Byte(WriteAddr);
  43   1              IIC_Wait_Ack();
  44   1              IIC_Send_Byte(wdata);                                                                                                   //·¢ËÍÊý¾Ý
  45   1              IIC_Wait_Ack();
  46   1              IIC_Stop();
  47   1              Delay_ms(10);
  48   1      }
  49          
  50          /**********************************************************
  51          *¹¦    ÄÜ£ºÔÚAT24CXXÀïÃæµÄÖ¸¶¨µØÖ·¿ªÊ¼Ð´Èë³¤¶ÈÎªlengthµÄÊý¾Ý
  52          *²Î    Êý£ºWriteAddr/¿ªÊ¼Ð´ÈëµÄµØÖ·£»data/Êý¾ÝÊý×éÊ×µØÖ·£»length/ÒªÐ´ÈëÊý¾ÝµÄ³¤¶È2,4
  53          *·µ »Ø Öµ£ºÎÞ
C51 COMPILER V9.54   24C02                                                                 06/29/2022 17:50:36 PAGE 2   

  54          **********************************************************/
  55          void IC_24Cxx_WaitLenByte(uint16_t WriteAddr,uint32_t wdata,uint8_t length)
  56          {
  57   1              uint8_t i = 0;
  58   1              for(i=0;i<length;i++)
  59   1              {
  60   2                      IC_24Cxx_Write_Byte(WriteAddr+i,(wdata>>(8*i))&0xff);
  61   2              }
  62   1      }
  63          /**********************************************************
  64          *¹¦    ÄÜ£ºÔÚAT24CXXÀïÃæµÄÖ¸¶¨µØÖ·¿ªÊ¼¶Á³ö³¤¶ÈÎªlengthµÄÊý¾Ý
  65          *²Î    Êý£ºReadAddr/¿ªÊ¼¶Á³öµÄµØÖ·£»length/Òª¶Á³öÊý¾ÝµÄ³¤¶È2,4
  66          *·µ »Ø Öµ£ºÊý¾Ý
  67          **********************************************************/
  68          uint32_t IC_24Cxx_ReadLenByte(uint16_t ReadAddr,uint8_t length)
  69          {
  70   1              uint8_t i = 0;
  71   1              uint32_t temp = 0;
  72   1              for(i=0;i<length;i++)
  73   1              {
  74   2                      temp<<=8;
  75   2                      temp = IC_24Cxx_Read_Byte(ReadAddr+i);
  76   2              }       
  77   1              return temp;
  78   1      }
  79          
  80          /**********************************************************
  81          *¹¦    ÄÜ£ºÔÚAT24CXXÀïÃæµÄÖ¸¶¨µØÖ·¿ªÊ¼¶Á³öÖ¸¶¨¸öÊýµÄÊý¾Ý
  82          *²Î    Êý£ºReadAddr/¿ªÊ¼¶Á³öµÄµØÖ· ¶Ô24c01Îª0~127£»Buffer/Êý¾ÝÊý×éÊ×µØÖ·£»Buf_len/Òª¶Á³öÊý¾ÝµÄ¸öÊý
  83          *·µ »Ø Öµ£ºÎÞ
  84          **********************************************************/
  85          void IC_24Cxx_Read(uint16_t ReadAddr,uint8_t *Buffer,uint16_t Buf_len)
  86          {
  87   1          while(Buf_len)
  88   1              {
  89   2                      *Buffer++ = IC_24Cxx_Read_Byte(ReadAddr++);
  90   2                      Buf_len--;
  91   2              }
  92   1      }
  93          
  94          /**********************************************************
  95          *¹¦    ÄÜ£ºÔÚAT24CXXÀïÃæµÄÖ¸¶¨µØÖ·¿ªÊ¼Ð´ÈëÖ¸¶¨¸öÊýµÄÊý¾Ý
  96          *²Î    Êý£ºWriteAddr/¿ªÊ¼Ð´ÈëµÄµØÖ· ¶Ô24c01Îª0~127£»Buffer/Êý¾ÝÊý×éÊ×µØÖ·£»Buf_len/ÒªÐ´ÈëÊý¾ÝµÄ¸öÊý
  97          *·µ »Ø Öµ£ºÎÞ
  98          ********************************************* *************/
  99          void IC_24Cxx_Write(uint16_t WriteAddr,uint8_t *Buffer,uint16_t Buf_len)
 100          {
 101   1              while(Buf_len--)
 102   1              {
 103   2                      IC_24Cxx_Write_Byte(WriteAddr,*Buffer);
 104   2                      WriteAddr++;
 105   2                      Buffer++;
 106   2              }
 107   1      }
 108          /**********************************************************
 109          *¹¦    ÄÜ£º¼ì²éAT24CXXÊÇ·ñÕý³££¬ÕâÀïÓÃÁË24XXµÄ×îºóÒ»¸öµØÖ·(255)À´´æ´¢±êÖ¾×Ö£¬Èç¹ûÓÃÆäËû24CÏµÁÐ,Õâ¸öµØÖ·ÒªÐ
             -Þ¸Ä
 110          *²Î    Êý£ºWriteAddr/¿ªÊ¼Ð´ÈëµÄµØÖ· ¶Ô24c01Îª0~127£»Buffer/Êý¾ÝÊý×éÊ×µØÖ·£»Buf_len/ÒªÐ´ÈëÊý¾ÝµÄ¸öÊý
 111          *·µ »Ø Öµ£º1/¼ì²âÊ§°Ü£»0/¼ì²â³É¹¦
 112          **********************************************************/
 113          uint8_t IC_24Cxx_Check(void)
 114          {
C51 COMPILER V9.54   24C02                                                                 06/29/2022 17:50:36 PAGE 3   

 115   1              uint8_t temp = 0;
 116   1              temp = IC_24Cxx_Read_Byte(127);
 117   1              if(temp == 0x55)
 118   1                      return 0;
 119   1              else 
 120   1              {
 121   2                      IC_24Cxx_Write_Byte(127,0x55);
 122   2                      temp = IC_24Cxx_Read_Byte(127);
 123   2                      if(temp == 0x55)
 124   2                              return 0;
 125   2              }
 126   1              return 1;
 127   1      }
 128          
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    524    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      36
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
